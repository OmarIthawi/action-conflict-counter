name: 'Report conflicts via pull request comment.'

on:
  workflow_call:
    inputs:
      local_base_branch:
        type: string
        description: 'Will be used to calculates the new conflicts the pull request / branch introduces.'
        required: true
        default: 'main'
      upstream_repo:
        type: string
        description: 'Upstream repository to count conflicts against.'
        required: true
      upstream_branches:
        type: string
        description: 'Upstream repo branches (comma seperated) to calculate conflicts against.'
        required: true
        default: 'main'
      current_git_repo:
        type: string
        description: 'Override the github repo for advanced usage.'
        required: false
      current_git_branch:
        type: string
        description: 'Override the github branch for advanced usage.'
        required: false
      exclude_paths:
        type: string
        default: ''
        description: 'Comma separated list of paths to exclude from counting the conflicts.'
        required: false
    secrets:
      custom_github_token:
        required: true

jobs:
  merge_conflict_job:
    name: report
    runs-on: ubuntu-latest
    steps:
      - name: Hide old comments
        uses: appsembler/hide-comment-action@v1
        with:
          ends-with: '<!--- action-conflict-counter --->'
      - name: Merge Conflict counter
        id: conflicts_counter
        uses: appsembler/action-conflict-counter@main
        with:
          local_base_branch: ${{ inputs.local_base_branch }}
          upstream_repo: ${{ inputs.upstream_repo }}
          upstream_branches: ${{ inputs.upstream_branches }}
          current_git_repo: ${{ inputs.current_git_repo }}
          current_git_branch: ${{ inputs.current_git_branch }}
          exclude_paths: ${{ inputs.exclude_paths }}
      - name: Post comment
        uses: actions/github-script@v5.1.0
        if: github.event_name == 'pull_request'
        env:
          CONFLICTS_COUNTER_REPORT: ${{ steps.conflicts_counter.outputs.conflicts_report_json }}
        with:
          github-token: ${{ secrets.custom_github_token }}
          script: |
            const conflictsReport = JSON.parse(process.env.CONFLICTS_COUNTER_REPORT);
            const { owner, repo } = context.repo;

            github.rest.issues.createComment({
                owner,
                repo,
                issue_number: context.issue.number,
                body: conflictsReport.report
            }).then(() => {
                // Mark the workflow as failed if there are added conflicts.
                if (conflictsReport.adds_conflicts) {
                  process.exit(1);
                }              
            })
